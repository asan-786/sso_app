{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\sso_app\\\\frontend\\\\src\\\\components\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst API_URL = \"http://127.0.0.1:8000/api\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const savedToken = localStorage.getItem(\"access_token\");\n    const savedUser = localStorage.getItem(\"user\");\n    if (savedToken && savedUser) {\n      setToken(savedToken);\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          message: error.detail || \"Login failed\"\n        };\n      }\n      const data = await response.json();\n\n      // Save token and user\n      localStorage.setItem(\"access_token\", data.access_token);\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n      setToken(data.access_token);\n      setUser(data.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        message: \"Network error. Please try again.\"\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const response = await fetch(`${API_URL}/auth/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          message: error.detail || \"Registration failed\"\n        };\n      }\n      const data = await response.json();\n\n      // Save token and user\n      localStorage.setItem(\"access_token\", data.access_token);\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n      setToken(data.access_token);\n      setUser(data.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(\"Register error:\", error);\n      return {\n        success: false,\n        message: \"Network error. Please try again.\"\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      if (token) {\n        await fetch(`${API_URL}/auth/logout`, {\n          method: \"POST\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // Clear local storage and state\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"user\");\n      setToken(null);\n      setUser(null);\n    }\n  };\n\n  // Update profile function\n  const updateProfile = async updatedData => {\n    try {\n      const response = await fetch(`${API_URL}/profile`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          message: error.detail || \"Update failed\"\n        };\n      }\n\n      // Update local user data\n      const updatedUser = {\n        ...user,\n        ...updatedData\n      };\n      setUser(updatedUser);\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error(\"Update profile error:\", error);\n      return {\n        success: false,\n        message: \"Network error. Please try again.\"\n      };\n    }\n  };\n\n  // Helper function to make authenticated requests\n  const fetchWithAuth = async (endpoint, options = {}) => {\n    if (!token) {\n      throw new Error(\"No authentication token\");\n    }\n    const response = await fetch(`${API_URL}${endpoint}`, {\n      ...options,\n      headers: {\n        ...options.headers,\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    if (response.status === 401) {\n      // Token expired, logout\n      logout();\n      throw new Error(\"Session expired. Please login again.\");\n    }\n    return response;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      logout,\n      register,\n      updateProfile,\n      fetchWithAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"s3+shCSR/t4KywrfJXNOwwFNgWM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","API_URL","AuthProvider","children","_s","user","setUser","loading","setLoading","token","setToken","savedToken","localStorage","getItem","savedUser","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","ok","error","json","success","message","detail","data","setItem","access_token","console","register","userData","logout","removeItem","updateProfile","updatedData","updatedUser","fetchWithAuth","endpoint","options","Error","status","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["D:/Project/sso_app/frontend/src/components/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\nconst API_URL = \"http://127.0.0.1:8000/api\";\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(null);\r\n\r\n  // Load user from localStorage on mount\r\n  useEffect(() => {\r\n    const savedToken = localStorage.getItem(\"access_token\");\r\n    const savedUser = localStorage.getItem(\"user\");\r\n    \r\n    if (savedToken && savedUser) {\r\n      setToken(savedToken);\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        return { success: false, message: error.detail || \"Login failed\" };\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Save token and user\r\n      localStorage.setItem(\"access_token\", data.access_token);\r\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n      \r\n      setToken(data.access_token);\r\n      setUser(data.user);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      return { success: false, message: \"Network error. Please try again.\" };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/auth/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        return { success: false, message: error.detail || \"Registration failed\" };\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Save token and user\r\n      localStorage.setItem(\"access_token\", data.access_token);\r\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n      \r\n      setToken(data.access_token);\r\n      setUser(data.user);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Register error:\", error);\r\n      return { success: false, message: \"Network error. Please try again.\" };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      if (token) {\r\n        await fetch(`${API_URL}/auth/logout`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    } finally {\r\n      // Clear local storage and state\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"user\");\r\n      setToken(null);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  // Update profile function\r\n  const updateProfile = async (updatedData) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/profile`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        return { success: false, message: error.detail || \"Update failed\" };\r\n      }\r\n\r\n      // Update local user data\r\n      const updatedUser = { ...user, ...updatedData };\r\n      setUser(updatedUser);\r\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error(\"Update profile error:\", error);\r\n      return { success: false, message: \"Network error. Please try again.\" };\r\n    }\r\n  };\r\n\r\n  // Helper function to make authenticated requests\r\n  const fetchWithAuth = async (endpoint, options = {}) => {\r\n    if (!token) {\r\n      throw new Error(\"No authentication token\");\r\n    }\r\n\r\n    const response = await fetch(`${API_URL}${endpoint}`, {\r\n      ...options,\r\n      headers: {\r\n        ...options.headers,\r\n        \"Authorization\": `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (response.status === 401) {\r\n      // Token expired, logout\r\n      logout();\r\n      throw new Error(\"Session expired. Please login again.\");\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        loading,\r\n        login,\r\n        logout,\r\n        register,\r\n        updateProfile,\r\n        fetchWithAuth,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within AuthProvider\");\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}